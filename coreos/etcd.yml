#cloud-config
# this file is ignored by git because of the autogenerated discovery url
# to change something just 'git add --force coreos/etcd.yml'


write_files:
  - path: /run/systemd/system/etcd2.service.d/30-certificates.conf
    owner: root:root
    permissions: 0644
    content: |
      [Service]
      # Client Env Vars
      Environment=ETCD_CA_FILE=/etc/ssl/private/ca.crt
      Environment=ETCD_CERT_FILE=/etc/ssl/private/$private_ipv4.crt
      Environment=ETCD_KEY_FILE=/etc/ssl/private/$private_ipv4.key.insecure
  - path: /run/systemd/system/etcd2.service.d/10-cert-waiter.conf
    owner: root:root
    permissions: 0644
    content: |
      [Unit]
      Description=Waits for generate-certs
      After=generate-certs.service
      #[Service]
      #ExecStart=/usr/bin/echo "generate-certs.service finished let etcd starting"
  - path: /etc/locofo/config.json
    owner: root:root
    permissions: 0644
    content: |
      {
        "BindAddress": "0.0.0.0:2350",
        "Certs": {
          "CaFile": "/etc/ssl/private/ca.crt",
          "CertFile": "/etc/ssl/private/$private_ipv4.crt",
          "KeyFile": "/etc/ssl/private/$private_ipv4.key.insecure"
        },
        "Server": "https://$private_ipv4:2379",
        "Paths": [
          {
            "In": "/health",
            "Out": "/health",
            "ValidationRegex": "{\"health\": \"true\"}"
          }
        ]
      }

  - path: /opt/stylelounge/gen.sh
    owner: root:root
    permissions: 0755
    content: |
      cd /etc/ssl/private && /opt/etcd/etcd-ca new-cert --passphrase="${cert_passphrase}" --ip="127.0.0.1,$private_ipv4,$public_ipv4,${lb_ip}" --domain="*.${domain}" $private_ipv4
      cd /etc/ssl/private && /opt/etcd/etcd-ca sign --passphrase="${cert_passphrase}" $private_ipv4
      cd /etc/ssl/private && /opt/etcd/etcd-ca export --passphrase="${cert_passphrase}" --insecure $private_ipv4 > $private_ipv4.tar
      cd /etc/ssl/private && tar -xvf /etc/ssl/private/$private_ipv4.tar
      chmod 755 /etc/ssl/private
      cd /etc/ssl/private && cp .etcd-ca/ca.crt ./ca.crt
coreos:
  etcd2:
    # generate a new token for each unique cluster from https://discovery.etcd.io/new?size=3
    discovery: "https://discovery.etcd.io/f15b24a2430d7f7def72a4d8989166a1"
    # multi-region and multi-cloud deployments need to use $public_ipv4
    advertise-client-urls: "https://$private_ipv4:2379,https://$public_ipv4:2379"
    initial-advertise-peer-urls: "http://$private_ipv4:2380"
    # listen on both the official ports and the legacy ports
    # legacy ports can be omitted if your application doesn't depend on them
    listen-client-urls: "https://0.0.0.0:2379"
    listen-peer-urls: "http://$private_ipv4:2380"
  units:
    - name: setup-network-environment.service
      command: start
      content: |
        [Unit]
        Description=Setup Network Environment
        Documentation=https://github.com/kelseyhightower/setup-network-environment
        Requires=network-online.target
        After=network-online.target

        [Service]
        ExecStartPre=-/usr/bin/mkdir -p /opt/bin
        ExecStartPre=/usr/bin/curl -L -o /opt/bin/setup-network-environment -z /opt/bin/setup-network-environment https://github.com/kelseyhightower/setup-network-environment/releases/download/v1.0.0/setup-network-environment
        ExecStartPre=/usr/bin/chmod +x /opt/bin/setup-network-environment
        ExecStart=/opt/bin/setup-network-environment
        RemainAfterExit=yes
        Type=oneshot
    - name: generate-certs.service
      command: start
      content: |
        [Unit]
        Description=Create certificates for etcd
        Requires=setup-network-environment.service
        After=setup-network-environment.service

        [Service]
        ExecStartPre=/bin/mkdir -p /etc/ssl/private/.etcd-ca || yes
        ExecStartPre=/opt/stylelounge/metadata-downloader ${cluster_prefix}ca-crt-etcd /etc/ssl/private/.etcd-ca/ca.crt
        ExecStartPre=/opt/stylelounge/metadata-downloader ${cluster_prefix}ca-key-etcd /etc/ssl/private/.etcd-ca/ca.key
        ExecStartPre=/opt/stylelounge/metadata-downloader ${cluster_prefix}ca-info-etcd /etc/ssl/private/.etcd-ca/ca.crt.info
        ExecStart=/usr/bin/bash /opt/stylelounge/gen.sh

        RemainAfterExit=yes
        Type=oneshot
    - name: locofo.service
      command: start
      content: |
        [Unit]
        Description=Locofo adds healthcheck support for http on gce
        Requires=setup-network-environment.service
        After=setup-network-environment.service

        [Service]
        ExecStart=/opt/stvnwrgs/locofo-linux64 /etc/locofo/config.json

        Restart=always
        RestartSec=5
    - name: etcd2.service
      command: start
